@model HAIRDRESSER2.Models.UzmanViewModel

<h2 class="text-center mb-4">Yeni Uzman Ekle</h2>

<form asp-action="UzmanEkle" method="post">
    <div asp-validation-summary="All" class="text-danger mb-3"></div>

    <!-- Ad Alanı -->
    <div class="form-group mb-3">
        <label asp-for="Uzman.Ad" class="fw-bold">Ad</label>
        <input type="text" asp-for="Uzman.Ad" class="form-control" placeholder="Uzmanın adını giriniz" required />
        <span asp-validation-for="Uzman.Ad" class="text-danger"></span>
    </div>

    <!-- Soyad Alanı -->
    <div class="form-group mb-3">
        <label asp-for="Uzman.Soyad" class="fw-bold">Soyad</label>
        <input type="text" asp-for="Uzman.Soyad" class="form-control" placeholder="Uzmanın soyadını giriniz" required />
        <span asp-validation-for="Uzman.Soyad" class="text-danger"></span>
    </div>

    <!-- Telefon Alanı -->
    <div class="form-group mb-3">
        <label asp-for="Uzman.Telefon" class="fw-bold">Telefon</label>
        <input type="tel" asp-for="Uzman.Telefon" class="form-control" placeholder="Telefon numarasını giriniz" required />
        <span asp-validation-for="Uzman.Telefon" class="text-danger"></span>
    </div>

    <!-- Uzmanlık Alanı Dropdown -->
    <div class="form-group">
        <label asp-for="Uzman.UzmanlikAlaniId" class="fw-bold">Uzmanlık Alanı</label>
        <select asp-for="Uzman.UzmanlikAlaniId" asp-items="Model.UzmanlikAlanlari" class="form-control" id="uzmanlikAlaniDropdown" onchange="showIslemler()"></select>
        <span asp-validation-for="Uzman.UzmanlikAlaniId" class="text-danger"></span>
    </div>

    <!-- Çalışma Saati Dropdown -->
    <div class="form-group">
        <label asp-for="Uzman.CalismaSaatiId" class="fw-bold">Çalışma Saati</label>
        <select asp-for="Uzman.CalismaSaatiId" asp-items="Model.CalismaSaatleri" class="form-control"></select>
        <span asp-validation-for="Uzman.CalismaSaatiId" class="text-danger"></span>
    </div>

    <!-- İşlemler Listesi -->
    <div class="form-group mt-4">
        <label class="fw-bold">İşlemler</label>
        <ul id="islemlerListesi" class="list-group">
            <!-- İşlemler dinamik olarak buraya eklenecek -->
        </ul>
    </div>

    <button type="submit" class="btn btn-success w-100 mt-3">Kaydet</button>
</form>

<div class="text-center mt-3">
    <a asp-action="UzmanListesi" class="btn btn-secondary">Geri Dön</a>
</div>

<script>
    async function showIslemler() {
        const uzmanlikAlaniId = document.getElementById('uzmanlikAlaniDropdown').value; // Seçilen uzmanlık alanı ID'si
        const islemlerListesi = document.getElementById('islemlerListesi'); // İşlemler listesinin yer alacağı DOM elemanı

        islemlerListesi.innerHTML = ''; // Listeyi temizle

        if (uzmanlikAlaniId > 0) { // Geçerli bir uzmanlık alanı seçildiyse
            try {
                // API'ye GET isteği gönder
                const response = await fetch(`/Admin/GetIslemlerByUzmanlikAlani/${uzmanlikAlaniId}`);

                // API'den gelen JSON yanıtını al
                const islemler = await response.json();

                // Eğer islemler boş değilse
                if (islemler.length > 0) {
                    islemler.forEach(islem => {
                        // Her işlem için liste elemanı oluştur
                        const li = document.createElement('li');
                        li.textContent = `${islem.ad} - ${islem.fiyat} TL (${islem.sure} dakika)`;
                        li.classList.add('list-group-item'); // Bootstrap sınıfı ile stil ekle
                        islemlerListesi.appendChild(li); // Listeye ekle
                    });
                } else {
                    // Eğer işlemler boşsa, kullanıcıya bilgi ver
                    const li = document.createElement('li');
                    li.textContent = "Bu uzmanlık alanında herhangi bir işlem bulunmamaktadır.";
                    li.classList.add('list-group-item', 'text-danger');
                    islemlerListesi.appendChild(li);
                }
            } catch (error) {
                console.error('Hata oluştu:', error);
                // Hata durumunda kullanıcıya bilgi ver
                const li = document.createElement('li');
                li.textContent = "İşlemler alınırken bir hata oluştu.";
                li.classList.add('list-group-item', 'text-danger');
                islemlerListesi.appendChild(li);
            }
        } else {
            // Eğer uzmanlık alanı seçilmediyse, kullanıcıya bilgi ver
            const li = document.createElement('li');
            li.textContent = "Lütfen geçerli bir uzmanlık alanı seçin.";
            li.classList.add('list-group-item', 'text-warning');
            islemlerListesi.appendChild(li);
        }
    }
</script>
<div class="mt-3">
    <a asp-controller="Admin" asp-action="AdminDashboard" class="btn btn-secondary">Geri Dön</a>
</div>